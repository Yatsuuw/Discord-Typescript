import { EmbedBuilder, PermissionFlagsBits, SlashCommandBuilder, TextChannel } from 'discord.js'
import { command } from '../../utils'
import { db } from '../../utils/database'

interface ServerSettings {
    logChannelId?: string,
}

const meta = new SlashCommandBuilder ()
    .setName('poll')
    .setDescription('Start a poll')
    .setDefaultMemberPermissions(PermissionFlagsBits.ManageGuild)
    .setDMPermission(false)
    .addStringOption((option) => 
        option
            .setName('question')
            .setDescription('Ask your question')
            .setMinLength(1)
            .setMaxLength(2000)
            .setRequired(true)
    )
    .addStringOption((option) =>
        option
            .setName('reponses')
            .setDescription('List your answers, separating them with inverted commas (" ").')
            .setMinLength(1)
            .setMaxLength(2000)
            .setRequired(true)
    )

export default command(meta, async ({ interaction }) => {
    const guildId = interaction.guild?.id;
    const guildName = interaction.guild?.name;

    db.get('SELECT logChannelId FROM servers_settings WHERE guildId = ?', [guildId], async (err, row: ServerSettings) => {
        if (err) {
            console.error(`Error when retrieving the "logChannelId" parameter from the database for the ${guildName} server (${guildId}).\nError :\n`, err);
            return;
        }

        const question = interaction.options.getString('question');
        //const reponses = interaction.options.getString('reponses');
        const emojis = ["1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟"];
        const regex = /"([^"]*)"/g;
        const matches = interaction.options.getString("reponses")?.match(regex);
        const logChannelId = row?.logChannelId;

        const sondageMessage = new EmbedBuilder()
            .setTitle(question)
            .setColor("Orange")
            .setDescription("Please respond with one of the reactions below.\nThe reactions are in the same order as the answers.")
            .addFields([
                { name: 'Possible answers', value: `${matches?.map(res => `-> ${res?.replace("\"", "")}`).join("\n")}` },
            ])
            .setTimestamp()
            .setFooter({ text: `By yatsuuw @ Discord | Poll generated by ${interaction.user.username}.`, iconURL: 'https://yatsuu.fr/wp-content/uploads/2024/04/profile.jpg' })

        if (logChannelId) {
            try {
                const logChannel = interaction.guild?.channels.cache.get(logChannelId) as TextChannel;
                //console.log(logChannel)

                if (logChannel) {
                    try {
                        if (!matches || matches.length < 2) {
                            return await interaction.reply({ content: "A minimum of two responses is required to complete a survey.", ephemeral: true });
                        } else {
                            await interaction.reply({ embeds: [sondageMessage] });
            
                            const sondageMessageSent = await interaction.fetchReply();
                    
                            for (let i = 0; i < emojis.length && i < matches.length; i++)
                                await sondageMessageSent.react(emojis[i])
                        }
                    } catch (error) {
                        return await interaction.reply({ content: `An error has occurred while sending the survey. Error :\n${error}`, ephemeral: true });
                    }

                    const logPoll = new EmbedBuilder()
                        .setTitle("Poll command log")
                        .setColor('Blue')
                        .setDescription(`${interaction.user.tag} used the command \`/poll\` in the channel <#${interaction.channel?.id}>.`)
                        .addFields([ 
                            { name: 'User', value: `<@${interaction.user.id}>` },
                            { name: 'Question', value: `${question}` },
                            { name: 'Answers', value: `${matches?.map(res => `-> ${res?.replace("\"", "")}`).join("\n")}` }
                        ])
                        .setTimestamp()
                        .setFooter({ text: "By yatsuuw @ Discord", iconURL: 'https://yatsuu.fr/wp-content/uploads/2024/04/profile.jpg' })

                    return logChannel.send({ embeds: [logPoll] })
                } else {
                    console.error(`The log channel with ID ${logChannelId} was not found for server ${guildName} (${guildId}).`);
                }
            } catch (error) {
                console.error(`Error retrieving the log room for server ${guildName} (${guildId}). Error : `, error);
            }
        } else {
            console.error(`The log channel ID is empty in the database for the ${guildName} server (${guildId}).`)
        }
    })
});